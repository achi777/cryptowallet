[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------< com.cryptowallet:crypto-wallet-backend >---------------
[INFO] Building crypto-wallet-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ crypto-wallet-backend >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ crypto-wallet-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 0 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ crypto-wallet-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ crypto-wallet-backend ---
[INFO] skip non existing resourceDirectory /Users/archilodishelidze/Desktop/dev/cryptowallet/backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ crypto-wallet-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ crypto-wallet-backend <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ crypto-wallet-backend ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

[2m2025-09-18T14:38:31.360+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mc.cryptowallet.CryptoWalletApplication  [0;39m [2m:[0;39m Starting CryptoWalletApplication using Java 23.0.2 with PID 21355 (/Users/archilodishelidze/Desktop/dev/cryptowallet/backend/target/classes started by archilodishelidze in /Users/archilodishelidze/Desktop/dev/cryptowallet/backend)
[2m2025-09-18T14:38:31.360+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mc.cryptowallet.CryptoWalletApplication  [0;39m [2m:[0;39m Running with Spring Boot v3.2.0, Spring v6.1.1
[2m2025-09-18T14:38:31.360+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mc.cryptowallet.CryptoWalletApplication  [0;39m [2m:[0;39m No active profile set, falling back to 1 default profile: "default"
[2m2025-09-18T14:38:31.629+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2m2025-09-18T14:38:31.650+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 18 ms. Found 3 JPA repository interfaces.
[2m2025-09-18T14:38:31.854+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port 8080 (http)
[2m2025-09-18T14:38:31.859+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[2m2025-09-18T14:38:31.859+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.apache.catalina.core.StandardEngine   [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/10.1.16]
[2m2025-09-18T14:38:31.891+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.a.c.c.C.[Tomcat].[localhost].[/]      [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2025-09-18T14:38:31.892+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 510 ms
[2m2025-09-18T14:38:31.953+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[2m2025-09-18T14:38:31.979+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.Version                   [0;39m [2m:[0;39m HHH000412: Hibernate ORM core version 6.3.1.Final
[2m2025-09-18T14:38:31.991+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.c.internal.RegionFactoryInitiator   [0;39m [2m:[0;39m HHH000026: Second-level cache disabled
[2m2025-09-18T14:38:32.083+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.o.j.p.SpringPersistenceUnitInfo     [0;39m [2m:[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
[2m2025-09-18T14:38:32.093+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Starting...
[2m2025-09-18T14:38:32.176+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.pool.HikariPool       [0;39m [2m:[0;39m HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@656ec00d
[2m2025-09-18T14:38:32.177+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Start completed.
[2m2025-09-18T14:38:32.195+04:00[0;39m [33m WARN[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.orm.deprecation           [0;39m [2m:[0;39m HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[2m2025-09-18T14:38:32.548+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[2m2025-09-18T14:38:32.609+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[2m2025-09-18T14:38:32.740+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.d.j.r.query.QueryEnhancerFactory    [0;39m [2m:[0;39m Hibernate is in classpath; If applicable, HQL parser will be used.
[2m2025-09-18T14:38:32.995+04:00[0;39m [33m WARN[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mJpaBaseConfiguration$JpaWebConfiguration[0;39m [2m:[0;39m spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2m2025-09-18T14:38:33.002+04:00[0;39m [33m WARN[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36m.s.s.UserDetailsServiceAutoConfiguration[0;39m [2m:[0;39m 

Using generated security password: cc1e3fdd-ab48-47d2-be46-b7dfad2db8eb

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2m2025-09-18T14:38:33.099+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.s.web.DefaultSecurityFilterChain    [0;39m [2m:[0;39m Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4eb313ed, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3fc92211, org.springframework.security.web.context.SecurityContextHolderFilter@7b9e7633, org.springframework.security.web.header.HeaderWriterFilter@747216b6, org.springframework.web.filter.CorsFilter@63d8590c, org.springframework.security.web.authentication.logout.LogoutFilter@227ae4e4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57bc7f67, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f808ad9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@117bfeb8, org.springframework.security.web.access.ExceptionTranslationFilter@181a6784, org.springframework.security.web.access.intercept.AuthorizationFilter@4a577b99]
[2m2025-09-18T14:38:33.173+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat started on port 8080 (http) with context path ''
[2m2025-09-18T14:38:33.177+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mc.cryptowallet.CryptoWalletApplication  [0;39m [2m:[0;39m Started CryptoWalletApplication in 1.973 seconds (process running for 2.127)
[2m2025-09-18T14:38:36.765+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36mo.a.c.c.C.[Tomcat].[localhost].[/]      [0;39m [2m:[0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
[2m2025-09-18T14:38:36.765+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Initializing Servlet 'dispatcherServlet'
[2m2025-09-18T14:38:36.766+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed initialization in 1 ms
[2m2025-09-18T14:38:36.782+04:00[0;39m [33m WARN[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36mo.s.w.s.h.HandlerMappingIntrospector    [0;39m [2m:[0;39m Cache miss for REQUEST dispatch to '/api/wallets/user/1' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
[2m2025-09-18T14:38:36.843+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-09-18T14:38:36.903+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-09-18T14:38:47.746+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[2m2025-09-18T14:38:47.751+04:00[0;39m [33m WARN[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36mcom.cryptowallet.service.UserService    [0;39m [2m:[0;39m Authentication failed for username: condor
[2m2025-09-18T14:39:05.997+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-8][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[2m2025-09-18T14:39:06.001+04:00[0;39m [33m WARN[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-8][0;39m [2m[0;39m[36mcom.cryptowallet.service.UserService    [0;39m [2m:[0;39m Authentication failed for username: condor
[2m2025-09-18T14:39:12.570+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[2m2025-09-18T14:39:12.575+04:00[0;39m [33m WARN[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36mcom.cryptowallet.service.UserService    [0;39m [2m:[0;39m Authentication failed for username: achi@achi
[2m2025-09-18T14:47:06.166+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
[2m2025-09-18T14:47:06.175+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[2m2025-09-18T14:47:06.286+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    insert 
    into
        users
        (active, created_at, email, first_name, last_name, password, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (active, created_at, email, first_name, last_name, password, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
[2m2025-09-18T14:47:06.298+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36mcom.cryptowallet.service.UserService    [0;39m [2m:[0;39m User registered successfully: condor
[2m2025-09-18T14:47:06.319+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-6][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-09-18T14:47:06.326+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-5][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-09-18T14:47:08.778+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [io-8080-exec-10][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
[2m2025-09-18T14:47:08.908+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [io-8080-exec-10][0;39m [2m[0;39m[36mc.c.service.TronWalletService           [0;39m [2m:[0;39m Generated Tron key pair: Tbfdd2ec51d260793aa2e358b47abbc217c
[2m2025-09-18T14:47:08.910+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [io-8080-exec-10][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
[2m2025-09-18T14:47:08.915+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [io-8080-exec-10][0;39m [2m[0;39m[36mcom.cryptowallet.service.WalletService  [0;39m [2m:[0;39m Wallet created successfully: Tbfdd2ec51d260793aa2e358b47abbc217c for user: condor
[2m2025-09-18T14:47:08.923+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-09-18T14:47:10.375+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
[2m2025-09-18T14:47:10.405+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36mc.c.service.BitcoinWalletService        [0;39m [2m:[0;39m Generated Bitcoin key pair: bc1q0385bfbdf44a227e7c5053cbf665dfe2
[2m2025-09-18T14:47:10.407+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
[2m2025-09-18T14:47:10.410+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36mcom.cryptowallet.service.WalletService  [0;39m [2m:[0;39m Wallet created successfully: bc1q0385bfbdf44a227e7c5053cbf665dfe2 for user: condor
[2m2025-09-18T14:47:10.421+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-3][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-09-18T14:51:27.060+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-5][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[2m2025-09-18T14:51:27.084+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-5][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-09-18T14:51:27.188+04:00[0;39m [32m INFO[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-5][0;39m [2m[0;39m[36mcom.cryptowallet.service.UserService    [0;39m [2m:[0;39m User authenticated successfully: condor
[2m2025-09-18T14:51:27.211+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-7][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-09-18T14:51:27.226+04:00[0;39m [32mDEBUG[0;39m [35m21355[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-8][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
