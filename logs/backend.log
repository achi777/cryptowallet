[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------< com.cryptowallet:crypto-wallet-backend >---------------
[INFO] Building crypto-wallet-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ crypto-wallet-backend >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ crypto-wallet-backend ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 0 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ crypto-wallet-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ crypto-wallet-backend ---
[INFO] skip non existing resourceDirectory /Users/archilodishelidze/Desktop/cryptowallet/backend/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ crypto-wallet-backend ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ crypto-wallet-backend <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ crypto-wallet-backend ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

[2m2025-06-11T19:28:50.797+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mc.cryptowallet.CryptoWalletApplication  [0;39m [2m:[0;39m Starting CryptoWalletApplication using Java 23.0.2 with PID 75045 (/Users/archilodishelidze/Desktop/cryptowallet/backend/target/classes started by archilodishelidze in /Users/archilodishelidze/Desktop/cryptowallet/backend)
[2m2025-06-11T19:28:50.798+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mc.cryptowallet.CryptoWalletApplication  [0;39m [2m:[0;39m Running with Spring Boot v3.2.0, Spring v6.1.1
[2m2025-06-11T19:28:50.798+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mc.cryptowallet.CryptoWalletApplication  [0;39m [2m:[0;39m No active profile set, falling back to 1 default profile: "default"
[2m2025-06-11T19:28:51.068+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2m2025-06-11T19:28:51.100+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 28 ms. Found 3 JPA repository interfaces.
[2m2025-06-11T19:28:51.470+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port 8080 (http)
[2m2025-06-11T19:28:51.479+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[2m2025-06-11T19:28:51.479+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.apache.catalina.core.StandardEngine   [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/10.1.16]
[2m2025-06-11T19:28:51.541+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.a.c.c.C.[Tomcat].[localhost].[/]      [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2025-06-11T19:28:51.541+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 723 ms
[2m2025-06-11T19:28:51.655+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[2m2025-06-11T19:28:51.704+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.Version                   [0;39m [2m:[0;39m HHH000412: Hibernate ORM core version 6.3.1.Final
[2m2025-06-11T19:28:51.717+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.c.internal.RegionFactoryInitiator   [0;39m [2m:[0;39m HHH000026: Second-level cache disabled
[2m2025-06-11T19:28:51.813+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.o.j.p.SpringPersistenceUnitInfo     [0;39m [2m:[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
[2m2025-06-11T19:28:51.824+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Starting...
[2m2025-06-11T19:28:51.937+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.pool.HikariPool       [0;39m [2m:[0;39m HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@59e082f8
[2m2025-06-11T19:28:51.937+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Start completed.
[2m2025-06-11T19:28:51.962+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.orm.deprecation           [0;39m [2m:[0;39m HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[2m2025-06-11T19:28:52.361+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[2m2025-06-11T19:28:52.402+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table transactions (
        id bigserial not null,
        amount numeric(20,8) not null,
        block_number bigint,
        confirmations integer,
        created_at timestamp(6) not null,
        fee numeric(20,8),
        from_address varchar(255) not null,
        memo varchar(255),
        status varchar(255) not null check (status in ('PENDING','CONFIRMED','FAILED')),
        to_address varchar(255) not null,
        tx_hash varchar(255) not null,
        type varchar(255) not null check (type in ('SEND','RECEIVE')),
        wallet_id bigint not null,
        primary key (id)
    )
Hibernate: 
    create table transactions (
        id bigserial not null,
        amount numeric(20,8) not null,
        block_number bigint,
        confirmations integer,
        created_at timestamp(6) not null,
        fee numeric(20,8),
        from_address varchar(255) not null,
        memo varchar(255),
        status varchar(255) not null check (status in ('PENDING','CONFIRMED','FAILED')),
        to_address varchar(255) not null,
        tx_hash varchar(255) not null,
        type varchar(255) not null check (type in ('SEND','RECEIVE')),
        wallet_id bigint not null,
        primary key (id)
    )
[2m2025-06-11T19:28:52.422+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table users (
        id bigserial not null,
        active boolean,
        created_at timestamp(6) not null,
        email varchar(255) not null,
        first_name varchar(255),
        last_name varchar(255),
        password varchar(255) not null,
        updated_at timestamp(6),
        username varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        id bigserial not null,
        active boolean,
        created_at timestamp(6) not null,
        email varchar(255) not null,
        first_name varchar(255),
        last_name varchar(255),
        password varchar(255) not null,
        updated_at timestamp(6),
        username varchar(255) not null,
        primary key (id)
    )
[2m2025-06-11T19:28:52.429+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table wallets (
        id bigserial not null,
        active boolean,
        address varchar(255) not null,
        balance numeric(20,8),
        created_at timestamp(6) not null,
        currency varchar(255) not null check (currency in ('BITCOIN','USDT_TRC20')),
        private_key varchar(255) not null,
        updated_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
Hibernate: 
    create table wallets (
        id bigserial not null,
        active boolean,
        address varchar(255) not null,
        balance numeric(20,8),
        created_at timestamp(6) not null,
        currency varchar(255) not null check (currency in ('BITCOIN','USDT_TRC20')),
        private_key varchar(255) not null,
        updated_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
[2m2025-06-11T19:28:52.435+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists transactions 
       drop constraint if exists UK_pcaq61xakqmx496as8f0c5y0y
Hibernate: 
    alter table if exists transactions 
       drop constraint if exists UK_pcaq61xakqmx496as8f0c5y0y
[2m2025-06-11T19:28:52.439+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.engine.jdbc.spi.SqlExceptionHelper  [0;39m [2m:[0;39m SQL Warning Code: 0, SQLState: 00000
[2m2025-06-11T19:28:52.439+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.engine.jdbc.spi.SqlExceptionHelper  [0;39m [2m:[0;39m constraint "uk_pcaq61xakqmx496as8f0c5y0y" of relation "transactions" does not exist, skipping
[2m2025-06-11T19:28:52.440+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists transactions 
       add constraint UK_pcaq61xakqmx496as8f0c5y0y unique (tx_hash)
Hibernate: 
    alter table if exists transactions 
       add constraint UK_pcaq61xakqmx496as8f0c5y0y unique (tx_hash)
[2m2025-06-11T19:28:52.443+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists users 
       drop constraint if exists UK_6dotkott2kjsp8vw4d0m25fb7
Hibernate: 
    alter table if exists users 
       drop constraint if exists UK_6dotkott2kjsp8vw4d0m25fb7
[2m2025-06-11T19:28:52.444+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.engine.jdbc.spi.SqlExceptionHelper  [0;39m [2m:[0;39m SQL Warning Code: 0, SQLState: 00000
[2m2025-06-11T19:28:52.444+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.engine.jdbc.spi.SqlExceptionHelper  [0;39m [2m:[0;39m constraint "uk_6dotkott2kjsp8vw4d0m25fb7" of relation "users" does not exist, skipping
[2m2025-06-11T19:28:52.444+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
Hibernate: 
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
[2m2025-06-11T19:28:52.447+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists users 
       drop constraint if exists UK_r43af9ap4edm43mmtq01oddj6
Hibernate: 
    alter table if exists users 
       drop constraint if exists UK_r43af9ap4edm43mmtq01oddj6
[2m2025-06-11T19:28:52.448+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.engine.jdbc.spi.SqlExceptionHelper  [0;39m [2m:[0;39m SQL Warning Code: 0, SQLState: 00000
[2m2025-06-11T19:28:52.448+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.engine.jdbc.spi.SqlExceptionHelper  [0;39m [2m:[0;39m constraint "uk_r43af9ap4edm43mmtq01oddj6" of relation "users" does not exist, skipping
[2m2025-06-11T19:28:52.448+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
Hibernate: 
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
[2m2025-06-11T19:28:52.449+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists wallets 
       drop constraint if exists UK_97gkb67pi15hxx44rq58buta6
Hibernate: 
    alter table if exists wallets 
       drop constraint if exists UK_97gkb67pi15hxx44rq58buta6
[2m2025-06-11T19:28:52.449+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.engine.jdbc.spi.SqlExceptionHelper  [0;39m [2m:[0;39m SQL Warning Code: 0, SQLState: 00000
[2m2025-06-11T19:28:52.449+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.h.engine.jdbc.spi.SqlExceptionHelper  [0;39m [2m:[0;39m constraint "uk_97gkb67pi15hxx44rq58buta6" of relation "wallets" does not exist, skipping
[2m2025-06-11T19:28:52.449+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists wallets 
       add constraint UK_97gkb67pi15hxx44rq58buta6 unique (address)
Hibernate: 
    alter table if exists wallets 
       add constraint UK_97gkb67pi15hxx44rq58buta6 unique (address)
[2m2025-06-11T19:28:52.451+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists transactions 
       add constraint FK23bop5lktue0o5q7kr19ti8h 
       foreign key (wallet_id) 
       references wallets
Hibernate: 
    alter table if exists transactions 
       add constraint FK23bop5lktue0o5q7kr19ti8h 
       foreign key (wallet_id) 
       references wallets
[2m2025-06-11T19:28:52.454+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists wallets 
       add constraint FKc1foyisidw7wqqrkamafuwn4e 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists wallets 
       add constraint FKc1foyisidw7wqqrkamafuwn4e 
       foreign key (user_id) 
       references users
[2m2025-06-11T19:28:52.455+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[2m2025-06-11T19:28:52.591+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.d.j.r.query.QueryEnhancerFactory    [0;39m [2m:[0;39m Hibernate is in classpath; If applicable, HQL parser will be used.
[2m2025-06-11T19:28:52.866+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mJpaBaseConfiguration$JpaWebConfiguration[0;39m [2m:[0;39m spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2m2025-06-11T19:28:52.873+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36m.s.s.UserDetailsServiceAutoConfiguration[0;39m [2m:[0;39m 

Using generated security password: 2ccb3fe8-d1b9-4ca3-bd35-b84f54565a3a

This generated password is for development use only. Your security configuration must be updated before running your application in production.

[2m2025-06-11T19:28:52.976+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.s.web.DefaultSecurityFilterChain    [0;39m [2m:[0;39m Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e620fa9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2cee1bcf, org.springframework.security.web.context.SecurityContextHolderFilter@1d0590bc, org.springframework.security.web.header.HeaderWriterFilter@67c2ff5d, org.springframework.web.filter.CorsFilter@ae4a043, org.springframework.security.web.authentication.logout.LogoutFilter@a589070, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ce7d43, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30fba306, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50c9b080, org.springframework.security.web.access.ExceptionTranslationFilter@297bbd41, org.springframework.security.web.access.intercept.AuthorizationFilter@4fb1bffd]
[2m2025-06-11T19:28:53.086+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat started on port 8080 (http) with context path ''
[2m2025-06-11T19:28:53.089+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [           main][0;39m [2m[0;39m[36mc.cryptowallet.CryptoWalletApplication  [0;39m [2m:[0;39m Started CryptoWalletApplication in 2.485 seconds (process running for 2.677)
[2m2025-06-11T19:29:49.061+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36mo.a.c.c.C.[Tomcat].[localhost].[/]      [0;39m [2m:[0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
[2m2025-06-11T19:29:49.064+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Initializing Servlet 'dispatcherServlet'
[2m2025-06-11T19:29:49.067+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-1][0;39m [2m[0;39m[36mo.s.web.servlet.DispatcherServlet       [0;39m [2m:[0;39m Completed initialization in 3 ms
[2m2025-06-11T19:29:49.097+04:00[0;39m [33m WARN[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36mo.s.w.s.h.HandlerMappingIntrospector    [0;39m [2m:[0;39m Cache miss for REQUEST dispatch to '/api/users/register' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
[2m2025-06-11T19:29:49.246+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
[2m2025-06-11T19:29:49.258+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
[2m2025-06-11T19:29:49.358+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    insert 
    into
        users
        (active, created_at, email, first_name, last_name, password, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (active, created_at, email, first_name, last_name, password, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
[2m2025-06-11T19:29:49.372+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36mcom.cryptowallet.service.UserService    [0;39m [2m:[0;39m User registered successfully: condor
[2m2025-06-11T19:29:49.429+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-3][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:29:49.444+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-3][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:29:52.963+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-7][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
[2m2025-06-11T19:29:53.092+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-7][0;39m [2m[0;39m[36mc.c.service.BitcoinWalletService        [0;39m [2m:[0;39m Generated Bitcoin key pair: bc1q03715204028420e3375c19c21d7f405f
[2m2025-06-11T19:29:53.094+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-7][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
[2m2025-06-11T19:29:53.102+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-7][0;39m [2m[0;39m[36mcom.cryptowallet.service.WalletService  [0;39m [2m:[0;39m Wallet created successfully: bc1q03715204028420e3375c19c21d7f405f for user: condor
[2m2025-06-11T19:29:53.115+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-8][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:29:55.043+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
[2m2025-06-11T19:29:55.063+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36mc.c.service.TronWalletService           [0;39m [2m:[0;39m Generated Tron key pair: Tba812b08068f27741d5679adcf000e11fc
[2m2025-06-11T19:29:55.064+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
[2m2025-06-11T19:29:55.069+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36mcom.cryptowallet.service.WalletService  [0;39m [2m:[0;39m Wallet created successfully: Tba812b08068f27741d5679adcf000e11fc for user: condor
[2m2025-06-11T19:29:55.086+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [io-8080-exec-10][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:33:20.158+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
[2m2025-06-11T19:33:20.173+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:33:20.277+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36mcom.cryptowallet.service.UserService    [0;39m [2m:[0;39m User authenticated successfully: condor
[2m2025-06-11T19:33:20.308+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-3][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:33:20.316+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-5][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:33:24.513+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
[2m2025-06-11T19:33:24.520+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36mc.c.service.BitcoinWalletService        [0;39m [2m:[0;39m Generated Bitcoin key pair: bc1q033f46df6d52260a5f59667cb17ac2c4
[2m2025-06-11T19:33:24.521+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
[2m2025-06-11T19:33:24.524+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36mcom.cryptowallet.service.WalletService  [0;39m [2m:[0;39m Wallet created successfully: bc1q033f46df6d52260a5f59667cb17ac2c4 for user: condor
[2m2025-06-11T19:33:24.545+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [io-8080-exec-10][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:33:26.949+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.active,
        u1_0.created_at,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.updated_at,
        u1_0.username,
        w1_0.user_id,
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at 
    from
        users u1_0 
    left join
        wallets w1_0 
            on u1_0.id=w1_0.user_id 
    where
        u1_0.id=?
[2m2025-06-11T19:33:26.956+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36mc.c.service.TronWalletService           [0;39m [2m:[0;39m Generated Tron key pair: Ta9d65acf96273daae74bdcbabd14cd7762
[2m2025-06-11T19:33:26.957+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        wallets
        (active, address, balance, created_at, currency, private_key, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
[2m2025-06-11T19:33:26.960+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-2][0;39m [2m[0;39m[36mcom.cryptowallet.service.WalletService  [0;39m [2m:[0;39m Wallet created successfully: Ta9d65acf96273daae74bdcbabd14cd7762 for user: condor
[2m2025-06-11T19:33:26.976+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-4][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:33:40.066+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-5][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.block_number,
        t1_0.confirmations,
        t1_0.created_at,
        t1_0.fee,
        t1_0.from_address,
        t1_0.memo,
        t1_0.status,
        t1_0.to_address,
        t1_0.tx_hash,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
    order by
        t1_0.created_at desc
Hibernate: 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.block_number,
        t1_0.confirmations,
        t1_0.created_at,
        t1_0.fee,
        t1_0.from_address,
        t1_0.memo,
        t1_0.status,
        t1_0.to_address,
        t1_0.tx_hash,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
    order by
        t1_0.created_at desc
[2m2025-06-11T19:33:40.087+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-6][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.block_number,
        t1_0.confirmations,
        t1_0.created_at,
        t1_0.fee,
        t1_0.from_address,
        t1_0.memo,
        t1_0.status,
        t1_0.to_address,
        t1_0.tx_hash,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
    order by
        t1_0.created_at desc
Hibernate: 
    select
        t1_0.id,
        t1_0.amount,
        t1_0.block_number,
        t1_0.confirmations,
        t1_0.created_at,
        t1_0.fee,
        t1_0.from_address,
        t1_0.memo,
        t1_0.status,
        t1_0.to_address,
        t1_0.tx_hash,
        t1_0.type,
        t1_0.wallet_id 
    from
        transactions t1_0 
    join
        wallets w1_0 
            on w1_0.id=t1_0.wallet_id 
    where
        w1_0.user_id=? 
    order by
        t1_0.created_at desc
[2m2025-06-11T19:33:41.795+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [nio-8080-exec-9][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:33:41.809+04:00[0;39m [32mDEBUG[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [io-8080-exec-10][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.active,
        w1_0.address,
        w1_0.balance,
        w1_0.created_at,
        w1_0.currency,
        w1_0.private_key,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wallets w1_0 
    where
        w1_0.user_id=?
[2m2025-06-11T19:34:10.673+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [ionShutdownHook][0;39m [2m[0;39m[36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Closing JPA EntityManagerFactory for persistence unit 'default'
[2m2025-06-11T19:34:10.680+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [ionShutdownHook][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Shutdown initiated...
[2m2025-06-11T19:34:10.681+04:00[0;39m [32m INFO[0;39m [35m75045[0;39m [2m---[0;39m [2m[crypto-wallet-backend] [ionShutdownHook][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Shutdown completed.
